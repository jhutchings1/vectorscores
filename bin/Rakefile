require 'eslintrb/eslinttask'
require 'json'

task :default => [:eslint_source, :eslint_build]

eslint_file = File.read('.eslintrc.json')
eslint_options = JSON.parse(eslint_file)

dirs = [
  'js/vectorscores',
  'js/vs/',
  'scores/'
  ]

paths = '{' + dirs.join(',') + '}**/*.js'

# Lint source files
Eslintrb::EslintTask.new :eslint_source do |t|
  ignored_files = []

  # Exclude .js files with frontmatter
  source_files = Dir[paths].reject do |file|
    first_line = File.open(file, &:readline)

    if first_line =~ /^---/
      ignored_files.push(file)
    end
  end

  puts ignored_files
  puts "Ignoring #{ignored_files.length} source files containing front matter"

  t.pattern = source_files
  t.options = eslint_options
end

# Lint built files with no options to catch parsing errors
Eslintrb::EslintTask.new :eslint_build do |t|
  t.pattern = '_site/' + paths
end
